@page "/slotmachine"
<PageTitleSlot Machine></PageTitleSlot>
@using Dynamo.Business.Shared.Casino.Slots

<h1>Slot Machine</h1>


<div>
    <h2>Balance: $@slotMachine.Money</h2>
    <button @onclick="Reset">Reset</button>
    <h3>Last Win: $@lastWin</h3>
</div>

<style>
    .reel-image {
        width: 90px; /* Set a fixed width for main symbols */
        height: auto; /* Maintain aspect ratio */
        display: block; /* Ensures img is treated as block-level */
        margin: auto; /* Centers the image in its container */
    }

    .reel-previous-image {
        height: auto; /* Maintain aspect ratio */
        transform: rotateX(60deg); /* Tilts the image back */
        transform-origin: middle; /* Sets the rotation axis near the top of the image */

    }

    .reel-next-image {
        height: auto; /* Maintain aspect ratio */
        transform: rotateX(-60deg); /* Tilts the image forward */
        transform-origin: middle; /* Sets the rotation axis near the top of the image */
    }

</style>

<div class="row">
    @foreach (var reel in slotMachine.Reels)
    {
        <div class="col-2">
            <img class="reel-image reel-next-image" src="images/@GetImageFileName(reel.CurrentSymbol.PreviousSymbol.Symbol)" alt="@reel.CurrentSymbol.Symbol.ToString()" />
            <img class="reel-image" src="images/@GetImageFileName(reel.CurrentSymbol.Symbol)" alt="@reel.CurrentSymbol.Symbol.ToString()" />
            <img class="reel-image reel-previous-image" src="images/@GetImageFileName(reel.CurrentSymbol.NextSymbol.Symbol)" alt="@reel.CurrentSymbol.Symbol.ToString()" />
        </div>
    }
    <div class="col-2">
        <img @onclick="PullHandle" src="images/@HandleFile" alt="handle zero percent" />
    </div>
</div>


@code {
    private int lastWin = 0;
    private MechanicalSlotMachine slotMachine = new MechanicalSlotMachine(ReelStrings(), GetPayouts(), 10);
    private string HandleFile = "handle-0-percent.png";

    private async Task PullHandle()
    {
        HandleFile = "handle-10-percent.png";
        StateHasChanged();
        await Task.Delay(100);
        HandleFile = "handle-20-percent.png";
        StateHasChanged();
        await Task.Delay(100);
        HandleFile = "handle-30-percent.png";
        StateHasChanged();
        await Task.Delay(100);
        HandleFile = "handle-40-percent.png";
        StateHasChanged();
        await Task.Delay(100);
        HandleFile = "handle-20-percent.png";
        StateHasChanged();
        await Task.Delay(100);
        HandleFile = "handle-10-percent.png";
        StateHasChanged();
        await Task.Delay(100);

        if (slotMachine.Money <= 0)
        {
            lastWin = 0;
        }
        else
        {
            var random = new Random();
            var randomNumber = random.Next(20, 20 + slotMachine.Reels[0].NumberOfSymbols);
            for(var i = 0; i < randomNumber; i++)
            {
                slotMachine.AdvanceReel();
                await Task.Delay(150);
                StateHasChanged();
            }
            lastWin = slotMachine.HandlePayout();
        }
    }

    private void Reset()
    {
        slotMachine = new MechanicalSlotMachine(ReelStrings(), GetPayouts(), 10);
    }

    private static string GetImageFileName(Symbol symbol)
    {
        // Replace spaces and special characters as necessary
        return symbol.ToString().ToLower().Replace(" ", "") + ".png";
    }

    public static List<string> ReelStrings()
    {
        return new List<string>
        {
            "Butterfly, Red Scarf, Guitar, Red Scarf, Cardigan, Snake, Butterfly, Heart hands, Butterfly, Red Lips, 13, Red Lips, 13, Cardigan, Friendship Bracelet, Red Lips, Red Scarf, Heart hands, Snake, Quill and Ink",
            "Heart hands, Snake, Champagne, Cardigan, Quill and Ink, Cardigan, Cardigan, Snake, Red Scarf, Snake, Champagne, Friendship Bracelet, Snake, Butterfly, Red Scarf, Butterfly, 13, Snake, Cardigan, Champagne",
            "Snake, 13, Friendship Bracelet, Red Scarf, Guitar, Red Scarf, Cardigan, 13, Guitar, Red Lips, Red Lips, Red Lips, Quill and Ink, Cardigan, Champagne, Red Scarf, Cardigan, Red Scarf, Statue of Liberty, Heart hands"
        };
    }

    public static List<Payout> GetPayouts()
    {
        var oneHundredPayout = new Payout(new List<Symbol> { Symbol.QuillAndInk }, 100);
        var fiftyPayout = new Payout(new List<Symbol> { Symbol.RedScarf }, 50);
        var tenPayout = new Payout(new List<Symbol> { Symbol.HeartHands, Symbol.Thirteen, Symbol.RedScarf, Symbol.RedLips, Symbol.StatueOfLiberty, Symbol.Butterfly, Symbol.Cardigan, Symbol.Champagne, Symbol.FriendshipBracelet }, 10);
        var fivePayout = new Payout(new List<Symbol> { Symbol.HeartHands, Symbol.Thirteen, Symbol.RedLips, Symbol.RedScarf, Symbol.StatueOfLiberty }, 5);
        var zeroPayout = new Payout(new List<Symbol> { Symbol.Guitar, Symbol.Snake }, 0);
        return new List<Payout>()
        {
            oneHundredPayout,
            fiftyPayout,
            tenPayout,
            fivePayout,
            zeroPayout
        };
    }

}
